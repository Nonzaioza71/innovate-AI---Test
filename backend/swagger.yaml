# swagger.yaml
openapi: 3.0.0
info:
  title: My Express API
  version: 1.0.0
  description: A sample API with user management and JWT authentication.
servers:
  - url: http://localhost:3302/
    description: Development Server
tags:
  - name: Users
    description: User management operations
  - name: Auth
    description: Authentication operations
paths:
  /api/user-login:
    post:
      tags:
        - Auth
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: newuser
                password:
                  type: string
                  example: mysecurepassword
      responses:
        '200':
          description: User sing-in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User sing-in successfully.
        '400':
          description: Missing or invalid data
        '409':
          description: Username or email already exists
        '500':
          description: Server error
  /api/user-get-self-data:
    post:
      tags:
        - Auth
      summary: User get self data
      parameters:
        - name: authentication
          in: header
          description: Bearer token for authentication
          required: false
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJuZXd1c2VyIiwiZW1haWwiOiJuZXd1c2VyQGV4YW1wbGUuY29tIiwiY3JlYXRlZF9hdCI6IjIwMjUtMDctMDhUMTA6MzE6MjAuMDAwWiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA3LTA4VDEwOjMxOjIwLjAwMFoiLCJpYXQiOjE3NTE5NzA2ODUsImV4cCI6MTc1MTk3NDI4NX0.sz-MR1EynNKLsrYJGlvffJj9T1mIOkXySTnpUhoVovU
      responses:
        '200':
          description: User sing-in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User sing-in successfully.
        '400':
          description: Missing or invalid data
        '409':
          description: Username or email already exists
        '500':
          description: Server error
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
        '401':
          description: Unauthorized
  /api/user-register:
    post:
      tags:
        - Users
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: newuser
                password:
                  type: string
                  example: mysecurepassword
                email:
                  type: string
                  example: newuser@example.com
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  userId:
                    type: integer
                    example: 101
                  message:
                    type: string
                    example: User registered successfully.
        '400':
          description: Missing or invalid data
        '409':
          description: Username or email already exists
        '500':
          description: Server error
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT